<?php

use App\Models\Campaign;

//
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\File;
use Illuminate\Support\Facades\Route;

// Admin
use App\Http\Controllers\QrController;
use Illuminate\Support\Facades\Artisan;
use Illuminate\Support\Facades\Storage;
use App\Http\Controllers\HomeController;
use App\Http\Controllers\ClickController;
use App\Http\Controllers\ProjectController;
use App\Http\Controllers\Admin\UserController;
use App\Http\Controllers\SubProjectController;
use App\Http\Controllers\Admin\AdminController;
use App\Http\Controllers\Auth\RegisterController;
use App\Http\Controllers\Admin\CampaignController;
use App\Http\Controllers\Admin\Auth\LoginController;
use App\Http\Controllers\Admin\TransactionController;

use function PHPUnit\Framework\fileExists;

/*
|--------------------------------------------------------------------------
| Web Routes
|--------------------------------------------------------------------------
|
| Here is where you can register web routes for your application. These
| routes are loaded by the RouteServiceProvider within a group which
| contains the "web" middleware group. Now create something great!
|
*/

// Auth
// Auth::routes();

// Admin
Route::prefix('admin')->group(function () {

    Route::get('/', [AdminController::class, 'index'])->name('admin.dashboard.index');
    Route::get('/click', [TransactionController::class, 'index'])->name('admin.click.index');

    // Users
    Route::get('/users', [UserController::class, 'index'])->name('admin.users.index');
    Route::get('/block-user/{user}', [UserController::class, 'block'])->name('admin.user.block');
    Route::get('/unblock-user/{user}', [UserController::class, 'unblock'])->name('admin.user.unblock');
});

// Home
Route::get('/', [HomeController::class, 'index'])->name('home');

// Registration
Route::get('/register', [RegisterController::class, 'index'])->name('register');
Route::post('/register', [RegisterController::class, 'store']);

// Login
// Route::get('/login', [LoginController::class, 'index'])->name('login');
Route::post('/login', [App\Http\Controllers\Auth\LoginController::class, 'store'])->name('login');

// Admin Login
Route::get('/adminlogin', [LoginController::class, 'form'])->name('admin.login');
Route::post('/adminlogin', [LoginController::class, 'formProcess'])->name('admin.login.formProcess');
Route::post('/adminlogout', [LoginController::class, 'logout'])->name('logout');

// Projects
Route::get('/projects', [ProjectController::class, 'index'])->name('projects.index');
Route::post('/projects/add', [ProjectController::class, 'store'])->name('projects.add');
Route::get('/delete-project/{project}', [ProjectController::class, 'destroy'])->name('projects.delete');

// Sub Projects
Route::get('/projects/{project:name}/sub-projects', [SubProjectController::class, 'index'])->name('subProjects.index');
Route::post('/projects/{project:name}/sub-projects/add', [SubProjectController::class, 'store'])->name('subProjects.add');
Route::get('/projects/delete-sub-project/{project}', [SubProjectController::class, 'destroy'])->name('subProjects.delete');

// QR Codes
Route::get('/sub-projects/{subproject:name}/qr-codes/', [QrController::class, 'index'])->name('qr-codes.index');
Route::post('/sub-projects/{subproject}/qr-code/add', [QrController::class, 'formProcess'])->name('qr-code.formProcess');
Route::post('/sub-projects/{subproject}/qr-code/multiple-add', [QrController::class, 'multiple_store'])->name('create-multiple-qr');
Route::post('/multiple-qr-download', [QrController::class, 'multiple_download'])->name('download-multiple-qr');
Route::post('/update-qr/{campaign}', [QrController::class, 'update'])->name('qr-code.update');
// Route::get('/projects/{project}/qr-code/add', [QrController::class, 'form'])->name('qr-code.add');

// move qrs
Route::get(
    '/move',
    function () {
        $qrs = Campaign::all();
        $qrPath = storage_path('app/public/campaign/');
        foreach ($qrs as $qr) {
            $project = $qr->project;
            $subproject = $qr->subproject;
            // dd($qr->subproject);
            $old = $qrPath . str_replace(' ', '_', $project->name) . '/' . str_replace(' ', '_', $qr->qrcode);
            $new = $qrPath . str_replace(' ', '_', $project->name) . '/' . str_replace(' ', '_', $subproject->name) . '/' . str_replace(' ', '_', $qr->qrcode);
            // dd($old);
            if (file_exists($old)) {
                // $new_dir = $qrPath . str_replace(' ', '_', $project->name) . '/' . str_replace(' ', '_', $subproject->name);
                // echo ($qrPath);
                // dd($old);
                $new_dir = '/public/campaign/' . str_replace(' ', '_', $project->name) . '/' . str_replace(' ', '_', $subproject->name);
                if (!Storage::exists($new_dir)) {
                    Storage::makeDirectory($new_dir);
                }
                echo 'moving' . $qr->qrcode;
                rename($old, $new);
            } else {
                continue;
            }
        }
        return 'files moved';
    }
);
//
Route::get('/{str}', [ClickController::class, 'globalClick'])->name('click.redirect');
// Route::get('/linkstorage', function () {
    // Artisan::call('storage:link');
// });
